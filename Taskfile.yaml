version: '3'

env:
  PORT: 8080
  ENV: local
  TAG: 0.1.0

tasks:

  generate:
    desc: "Run all generators"
    aliases:
      - gen
    cmds:
      - task protoc-generate
      - task go-generate

  protoc-generate:
    desc: "Generate protobuf files"
    aliases:
      - protoc
      - pg
    cmds:
      - |
        protoc --go_out=gen --go_opt=paths=source_relative \
        --go-grpc_out=gen --go-grpc_opt=paths=source_relative \
        proto/card_validator.proto

  go-generate:
    desc: "Run go code generators"
    aliases:
      - gogen
      - gg
    cmds:
      - go generate ./...

  test:
    desc: "Run all tests"
    aliases:
      - t
    cmds:
      - go test ./... -coverprofile cover.out

  fmt:
    desc: Run fmt
    cmds:
      - go fmt ./...

  tidy:
    desc: Run mod tidy
    cmds:
      - go mod tidy

  build:
    desc: "Build the application"
    aliases:
      - b
    cmds:
      - go build -o ./bin/card_validator_server ./cmd/server

  docker-build:
    desc: "Build the Docker image"
    cmds:
      - docker build -t card-validator:$TAG .

  docker-run:
    desc: "Build the Docker image"
    cmds:
      - docker run -p $PORT:$PORT card-validator:$TAG --env=dev --port=$PORT --host=0.0.0.0

  run:
    desc: "Run the application"
    aliases:
      - r
      - start
    deps:
      - task: build
    cmds:
      - ./bin/card_validator_server --env=$ENV --port=$PORT --host=localhost

  evans:
    desc: "Run the gRPC client"
    cmds:
      - evans proto/card_validator.proto --port $PORT
